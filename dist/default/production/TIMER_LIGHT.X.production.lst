

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb  8 01:16:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x5E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F675 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0019                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0090                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0096                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0019                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  008C                     	;# 
   104  008E                     	;# 
   105  0090                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0096                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  000F                     _TMR1H	set	15
   118  000E                     _TMR1L	set	14
   119  0010                     _T1CON	set	16
   120  0019                     _CMCON	set	25
   121  0060                     _TMR1IF	set	96
   122  0058                     _GPIF	set	88
   123  0080                     _TMR1ON	set	128
   124  005B                     _GPIE	set	91
   125  005E                     _PEIE	set	94
   126  005F                     _GIE	set	95
   127  002D                     _GP5	set	45
   128  002C                     _GP4	set	44
   129  002A                     _GP2	set	42
   130  0029                     _GP1	set	41
   131  0028                     _GP0	set	40
   132  0095                     _WPU	set	149
   133  0085                     _TRISIO	set	133
   134  009F                     _ANSEL	set	159
   135  0460                     _TMR1IE	set	1120
   136  04B0                     _IOC0	set	1200
   137                           
   138                           ; #config settings
   139  0000                     
   140                           	psect	cinit
   141  000C                     start_initialization:	
   142  000C                     __initialization:	
   143                           
   144                           ; Clear objects allocated to BANK0
   145  000C  1283               	bcf	3,5	;RP0=0, select bank0
   146  000D  01A9               	clrf	__pbssBANK0& (0+127)
   147  000E  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   148  000F  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   149  0010                     end_of_initialization:	
   150                           ;End of C runtime variable initialization code
   151                           
   152  0010                     __end_of__initialization:	
   153  0010  0183               	clrf	3
   154  0011  28EA               	ljmp	_main	;jump to C main() function
   155                           
   156                           	psect	bssBANK0
   157  0029                     __pbssBANK0:	
   158  0029                     _count_button_press:	
   159  0029                     	ds	1
   160  002A                     _timer_out:	
   161  002A                     	ds	1
   162  002B                     _modo:	
   163  002B                     	ds	1
   164                           
   165                           	psect	cstackCOMMON
   166  0000                     __pcstackCOMMON:	
   167  0000                     ??_config_osc:	
   168  0000                     ??_config_mcu:	
   169                           ; 1 bytes @ 0x0
   170                           
   171  0000                     ??_config_var:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0000                     ??_config_TM1:	
   175                           ; 1 bytes @ 0x0
   176                           
   177  0000                     ??_main:	
   178                           ; 1 bytes @ 0x0
   179                           
   180                           
   181                           	psect	cstackBANK0
   182  0020                     __pcstackBANK0:	
   183                           ; 1 bytes @ 0x0
   184                           
   185  0020                     ?_config_osc:	
   186  0020                     ?_config_mcu:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0020                     ?_config_var:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0020                     ?_config_TM1:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0020                     ?_read_button:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0020                     ?_timer_on:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0020                     ?_isr:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0020                     ??_isr:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0020                     ?_main:	
   208                           ; 1 bytes @ 0x0
   209                           
   210                           
   211                           ; 2 bytes @ 0x0
   212  0020                     	ds	2
   213  0022                     ??_read_button:	
   214  0022                     ??_timer_on:	
   215                           ; 1 bytes @ 0x2
   216                           
   217                           
   218                           ; 1 bytes @ 0x2
   219  0022                     	ds	3
   220  0025                     timer_on@timer_cont_seg:	
   221                           
   222                           ; 2 bytes @ 0x5
   223  0025                     	ds	2
   224  0027                     timer_on@timer_cont_min:	
   225                           
   226                           ; 2 bytes @ 0x7
   227  0027                     	ds	2
   228                           
   229                           	psect	maintext
   230  00EA                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 104 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  2   64[None  ] int 
   243 ;; Registers used:
   244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0
   250 ;;      Params:         0       0
   251 ;;      Locals:         0       0
   252 ;;      Temps:          0       0
   253 ;;      Totals:         0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels required when called:    2
   256 ;; This function calls:
   257 ;;		_config_TM1
   258 ;;		_config_mcu
   259 ;;		_config_osc
   260 ;;		_config_var
   261 ;;		_read_button
   262 ;;		_timer_on
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           
   269                           ;psect for function _main
   270  00EA                     _main:	
   271  00EA                     l942:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   274                           
   275                           
   276                           ;main.c: 106:     config_osc();
   277  00EA  2106               	fcall	_config_osc
   278  00EB                     l944:	
   279                           
   280                           ;main.c: 107:     config_mcu();
   281  00EB  20D5               	fcall	_config_mcu
   282  00EC                     l946:	
   283                           
   284                           ;main.c: 108:     config_var();
   285  00EC  2101               	fcall	_config_var
   286                           
   287                           ;main.c: 109:     config_TM1();
   288  00ED  20F8               	fcall	_config_TM1
   289  00EE                     l948:	
   290                           
   291                           ;main.c: 112:     {;main.c: 114:         read_button();
   292  00EE  2064               	fcall	_read_button
   293  00EF                     l950:	
   294                           
   295                           ;main.c: 115:         if(modo == modo_timer)
   296  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   297  00F0  032B               	decf	_modo,w
   298  00F1  1D03               	btfss	3,2
   299  00F2  28F4               	goto	u241
   300  00F3  28F5               	goto	u240
   301  00F4                     u241:	
   302  00F4  28EE               	goto	l948
   303  00F5                     u240:	
   304  00F5                     l952:	
   305                           
   306                           ;main.c: 116:         {;main.c: 117:             timer_on();
   307  00F5  2012               	fcall	_timer_on
   308  00F6  28EE               	goto	l948
   309  00F7  280B               	ljmp	start
   310  00F8                     __end_of_main:	
   311                           
   312                           	psect	text1
   313  0012                     __ptext1:	
   314 ;; *************** function _timer_on *****************
   315 ;; Defined at:
   316 ;;		line 189 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;  timer_cont_m    2    7[BANK0 ] int 
   321 ;;  timer_cont_s    2    5[BANK0 ] int 
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0, btemp+1
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0
   331 ;;      Params:         0       0
   332 ;;      Locals:         0       4
   333 ;;      Temps:          0       3
   334 ;;      Totals:         0       7
   335 ;;Total ram usage:        7 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; Hardware stack levels required when called:    1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _timer_on
   347  0012                     _timer_on:	
   348  0012                     l912:	
   349                           ;incstack = 0
   350                           ; Regs used in _timer_on: [wreg+status,2+status,0+btemp+1]
   351                           
   352                           
   353                           ;main.c: 190:     int timer_cont_seg;;main.c: 191:     int timer_cont_min;;main.c: 193: 
      +                              timer_cont_min = 3;
   354  0012  3003               	movlw	3
   355  0013  1283               	bcf	3,5	;RP0=0, select bank0
   356  0014  00A7               	movwf	timer_on@timer_cont_min
   357  0015  3000               	movlw	0
   358  0016  00A8               	movwf	timer_on@timer_cont_min+1
   359                           
   360                           ;main.c: 194:     timer_cont_seg = 115;
   361  0017  3073               	movlw	115
   362  0018  00A5               	movwf	timer_on@timer_cont_seg
   363  0019  3000               	movlw	0
   364  001A  00A6               	movwf	timer_on@timer_cont_seg+1
   365  001B                     l914:	
   366                           
   367                           ;main.c: 195:     TMR1ON = 1;
   368  001B  1410               	bsf	16,0	;volatile
   369  001C                     l916:	
   370                           
   371                           ;main.c: 196:     GP2 = 1;
   372  001C  1283               	bcf	3,5	;RP0=0, select bank0
   373  001D  1505               	bsf	5,2	;volatile
   374                           
   375                           ;main.c: 197:     while(timer_cont_min > 0)
   376  001E  2852               	goto	l938
   377  001F                     l918:	
   378                           
   379                           ;main.c: 198:     {;main.c: 199:         if(timer_out == 1)
   380  001F  1283               	bcf	3,5	;RP0=0, select bank0
   381  0020  032A               	decf	_timer_out,w
   382  0021  1D03               	btfss	3,2
   383  0022  2824               	goto	u201
   384  0023  2825               	goto	u200
   385  0024                     u201:	
   386  0024  2852               	goto	l938
   387  0025                     u200:	
   388  0025                     l920:	
   389                           
   390                           ;main.c: 200:         {;main.c: 202:             timer_cont_seg--;
   391  0025  30FF               	movlw	255
   392  0026  07A5               	addwf	timer_on@timer_cont_seg,f
   393  0027  1803               	skipnc
   394  0028  0AA6               	incf	timer_on@timer_cont_seg+1,f
   395  0029  30FF               	movlw	255
   396  002A  07A6               	addwf	timer_on@timer_cont_seg+1,f
   397  002B                     l922:	
   398                           
   399                           ;main.c: 203:             timer_out = 0;
   400  002B  01AA               	clrf	_timer_out
   401  002C                     l924:	
   402                           
   403                           ;main.c: 204:             TMR1ON=1;
   404  002C  1410               	bsf	16,0	;volatile
   405  002D                     l926:	
   406                           
   407                           ;main.c: 206:                 if(timer_cont_seg == 0)
   408  002D  0825               	movf	timer_on@timer_cont_seg,w
   409  002E  0426               	iorwf	timer_on@timer_cont_seg+1,w
   410  002F  1D03               	btfss	3,2
   411  0030  2832               	goto	u211
   412  0031  2833               	goto	u210
   413  0032                     u211:	
   414  0032  2852               	goto	l938
   415  0033                     u210:	
   416  0033                     l928:	
   417                           
   418                           ;main.c: 207:                 {;main.c: 208:                         timer_cont_seg = 11
      +                          5;
   419  0033  3073               	movlw	115
   420  0034  00A5               	movwf	timer_on@timer_cont_seg
   421  0035  3000               	movlw	0
   422  0036  00A6               	movwf	timer_on@timer_cont_seg+1
   423                           
   424                           ;main.c: 210:                         timer_cont_min--;
   425  0037  30FF               	movlw	255
   426  0038  07A7               	addwf	timer_on@timer_cont_min,f
   427  0039  1803               	skipnc
   428  003A  0AA8               	incf	timer_on@timer_cont_min+1,f
   429  003B  30FF               	movlw	255
   430  003C  07A8               	addwf	timer_on@timer_cont_min+1,f
   431  003D                     l930:	
   432                           
   433                           ;main.c: 211:                         if(timer_cont_min == 1)
   434  003D  0327               	decf	timer_on@timer_cont_min,w
   435  003E  0428               	iorwf	timer_on@timer_cont_min+1,w
   436  003F  1D03               	btfss	3,2
   437  0040  2842               	goto	u221
   438  0041  2843               	goto	u220
   439  0042                     u221:	
   440  0042  2852               	goto	l86
   441  0043                     u220:	
   442  0043                     l932:	
   443                           
   444                           ;main.c: 212:                         {;main.c: 213:                             GP2 = 0
      +                          ;
   445  0043  1105               	bcf	5,2	;volatile
   446  0044                     l934:	
   447                           
   448                           ;main.c: 214:                             _delay((unsigned long)((500)*(4000000/4000.0))
      +                          );
   449  0044  3003               	movlw	3
   450  0045  00A4               	movwf	??_timer_on+2
   451  0046  308A               	movlw	138
   452  0047  00A3               	movwf	??_timer_on+1
   453  0048  3055               	movlw	85
   454  0049  00A2               	movwf	??_timer_on
   455  004A                     u317:	
   456  004A  0BA2               	decfsz	??_timer_on,f
   457  004B  284A               	goto	u317
   458  004C  0BA3               	decfsz	??_timer_on+1,f
   459  004D  284A               	goto	u317
   460  004E  0BA4               	decfsz	??_timer_on+2,f
   461  004F  284A               	goto	u317
   462  0050  2851               	nop2
   463  0051  281C               	goto	l916
   464  0052                     l86:	
   465                           ;main.c: 219:         }
   466                           
   467  0052                     l938:	
   468                           
   469                           ;main.c: 197:     while(timer_cont_min > 0)
   470  0052  0828               	movf	timer_on@timer_cont_min+1,w
   471  0053  3A80               	xorlw	128
   472  0054  00DF               	movwf	btemp+1
   473  0055  3080               	movlw	128
   474  0056  025F               	subwf	btemp+1,w
   475  0057  1D03               	skipz
   476  0058  285B               	goto	u235
   477  0059  3001               	movlw	1
   478  005A  0227               	subwf	timer_on@timer_cont_min,w
   479  005B                     u235:	
   480  005B  1803               	skipnc
   481  005C  285E               	goto	u231
   482  005D  285F               	goto	u230
   483  005E                     u231:	
   484  005E  281F               	goto	l918
   485  005F                     u230:	
   486  005F                     l89:	
   487                           
   488                           ;main.c: 224:     TMR1ON = 0;
   489  005F  1283               	bcf	3,5	;RP0=0, select bank0
   490  0060  1010               	bcf	16,0	;volatile
   491                           
   492                           ;main.c: 225:     GP2 = 0;
   493  0061  1105               	bcf	5,2	;volatile
   494  0062                     l940:	
   495                           
   496                           ;main.c: 226:     modo = modo_desligado;
   497  0062  01AB               	clrf	_modo
   498  0063                     l90:	
   499  0063  0008               	return
   500  0064                     __end_of_timer_on:	
   501                           
   502                           	psect	text2
   503  0064                     __ptext2:	
   504 ;; *************** function _read_button *****************
   505 ;; Defined at:
   506 ;;		line 230 in file "main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0
   520 ;;      Params:         0       0
   521 ;;      Locals:         0       0
   522 ;;      Temps:          0       2
   523 ;;      Totals:         0       2
   524 ;;Total ram usage:        2 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _read_button
   536  0064                     _read_button:	
   537  0064                     l882:	
   538                           ;incstack = 0
   539                           ; Regs used in _read_button: [wreg-fsr0h+status,2+status,0]
   540                           
   541                           
   542                           ;main.c: 232:     if(GP0 != 1)
   543  0064  1283               	bcf	3,5	;RP0=0, select bank0
   544  0065  1805               	btfsc	5,0	;volatile
   545  0066  2868               	goto	u161
   546  0067  2869               	goto	u160
   547  0068                     u161:	
   548  0068  28AB               	goto	l102
   549  0069                     u160:	
   550  0069                     l884:	
   551                           
   552                           ;main.c: 233:     {;main.c: 234:         _delay((unsigned long)((10)*(4000000/4000.0)));
   553  0069  300D               	movlw	13
   554  006A  00A3               	movwf	??_read_button+1
   555  006B  30FB               	movlw	251
   556  006C  00A2               	movwf	??_read_button
   557  006D                     u327:	
   558  006D  0BA2               	decfsz	??_read_button,f
   559  006E  286D               	goto	u327
   560  006F  0BA3               	decfsz	??_read_button+1,f
   561  0070  286D               	goto	u327
   562  0071  2872               	nop2
   563  0072                     l886:	
   564                           
   565                           ;main.c: 235:         if(GP0 != 1)
   566  0072  1283               	bcf	3,5	;RP0=0, select bank0
   567  0073  1805               	btfsc	5,0	;volatile
   568  0074  2876               	goto	u171
   569  0075  2877               	goto	u170
   570  0076                     u171:	
   571  0076  28AB               	goto	l102
   572  0077                     u170:	
   573  0077  2898               	goto	l906
   574  0078                     l96:	
   575                           ;main.c: 239:                 case modo_desligado:{
   576                           
   577                           
   578                           ;main.c: 240:                                         modo = modo_timer;
   579  0078  01AB               	clrf	_modo
   580  0079  0AAB               	incf	_modo,f
   581                           
   582                           ;main.c: 241:                                         break;
   583  007A  28AB               	goto	l102
   584  007B                     l890:	
   585                           
   586                           ;main.c: 244:                                        count_button_press++;
   587  007B  3001               	movlw	1
   588  007C  00A2               	movwf	??_read_button
   589  007D  0822               	movf	??_read_button,w
   590  007E  07A9               	addwf	_count_button_press,f
   591  007F                     l892:	
   592                           
   593                           ;main.c: 245:                                        if(count_button_press > 5)
   594  007F  3006               	movlw	6
   595  0080  0229               	subwf	_count_button_press,w
   596  0081  1C03               	skipc
   597  0082  2884               	goto	u181
   598  0083  2885               	goto	u180
   599  0084                     u181:	
   600  0084  28AB               	goto	l94
   601  0085                     u180:	
   602  0085                     l894:	
   603                           
   604                           ;main.c: 246:                                        {;main.c: 247:                     
      +                                                 modo = modo_sempre_ligado;
   605  0085  3002               	movlw	2
   606  0086  00A2               	movwf	??_read_button
   607  0087  0822               	movf	??_read_button,w
   608  0088  00AB               	movwf	_modo
   609  0089                     l896:	
   610                           
   611                           ;main.c: 248:                                            count_button_press = 0;
   612  0089  01A9               	clrf	_count_button_press
   613  008A  28AB               	goto	l102
   614  008B                     l898:	
   615                           
   616                           ;main.c: 254:                                             count_button_press++;
   617  008B  3001               	movlw	1
   618  008C  00A2               	movwf	??_read_button
   619  008D  0822               	movf	??_read_button,w
   620  008E  07A9               	addwf	_count_button_press,f
   621  008F                     l900:	
   622                           
   623                           ;main.c: 255:                                             if(count_button_press > 50)
   624  008F  3033               	movlw	51
   625  0090  0229               	subwf	_count_button_press,w
   626  0091  1C03               	skipc
   627  0092  2894               	goto	u191
   628  0093  2895               	goto	u190
   629  0094                     u191:	
   630  0094  28AB               	goto	l94
   631  0095                     u190:	
   632  0095                     l902:	
   633                           
   634                           ;main.c: 256:                                             {;main.c: 257:                
      +                                                           modo = modo_desligado;
   635  0095  01AB               	clrf	_modo
   636                           
   637                           ;main.c: 258:                                                 count_button_press = 0;
   638  0096  01A9               	clrf	_count_button_press
   639  0097  28AB               	goto	l102
   640  0098                     l906:	
   641  0098  082B               	movf	_modo,w
   642  0099  00A2               	movwf	??_read_button
   643  009A  01A3               	clrf	??_read_button+1
   644                           
   645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   646                           ; Switch size 1, requested type "simple"
   647                           ; Number of cases is 1, Range of values is 0 to 0
   648                           ; switch strategies available:
   649                           ; Name         Instructions Cycles
   650                           ; simple_byte            4     3 (average)
   651                           ; direct_byte            7     6 (fixed)
   652                           ; jumptable            260     6 (fixed)
   653                           ;	Chosen strategy is simple_byte
   654  009B  0823               	movf	??_read_button+1,w
   655  009C  3A00               	xorlw	0	; case 0
   656  009D  1903               	skipnz
   657  009E  28A0               	goto	l988
   658  009F  28AB               	goto	l102
   659  00A0                     l988:	
   660                           
   661                           ; Switch size 1, requested type "simple"
   662                           ; Number of cases is 3, Range of values is 0 to 2
   663                           ; switch strategies available:
   664                           ; Name         Instructions Cycles
   665                           ; direct_byte            9     6 (fixed)
   666                           ; simple_byte           10     6 (average)
   667                           ; jumptable            260     6 (fixed)
   668                           ;	Chosen strategy is simple_byte
   669  00A0  0822               	movf	??_read_button,w
   670  00A1  3A00               	xorlw	0	; case 0
   671  00A2  1903               	skipnz
   672  00A3  2878               	goto	l96
   673  00A4  3A01               	xorlw	1	; case 1
   674  00A5  1903               	skipnz
   675  00A6  287B               	goto	l890
   676  00A7  3A03               	xorlw	3	; case 2
   677  00A8  1903               	skipnz
   678  00A9  288B               	goto	l898
   679  00AA  28AB               	goto	l102
   680  00AB                     l94:	
   681                           ;main.c: 264:         }
   682                           
   683  00AB                     l102:	
   684  00AB  0008               	return
   685  00AC                     __end_of_read_button:	
   686                           
   687                           	psect	text3
   688  0101                     __ptext3:	
   689 ;; *************** function _config_var *****************
   690 ;; Defined at:
   691 ;;		line 163 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0
   705 ;;      Params:         0       0
   706 ;;      Locals:         0       0
   707 ;;      Temps:          0       0
   708 ;;      Totals:         0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _config_var
   721  0101                     _config_var:	
   722  0101                     l872:	
   723                           ;incstack = 0
   724                           ; Regs used in _config_var: [status,2]
   725                           
   726                           
   727                           ;main.c: 164:    count_button_press = 0;
   728  0101  1283               	bcf	3,5	;RP0=0, select bank0
   729  0102  01A9               	clrf	_count_button_press
   730                           
   731                           ;main.c: 165:    modo = modo_desligado;
   732  0103  01AB               	clrf	_modo
   733                           
   734                           ;main.c: 172:     timer_out = 0;
   735  0104  01AA               	clrf	_timer_out
   736  0105                     l78:	
   737  0105  0008               	return
   738  0106                     __end_of_config_var:	
   739                           
   740                           	psect	text4
   741  0106                     __ptext4:	
   742 ;; *************** function _config_osc *****************
   743 ;; Defined at:
   744 ;;		line 130 in file "main.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		None
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0
   758 ;;      Params:         0       0
   759 ;;      Locals:         0       0
   760 ;;      Temps:          0       0
   761 ;;      Totals:         0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _config_osc
   774  0106                     _config_osc:	
   775  0106                     l846:	
   776                           ;incstack = 0
   777                           ; Regs used in _config_osc: []
   778                           
   779  0106  1683               	bsf	3,5	;# 
   780  0107  23FF               	call	1023	;# 
   781  0108  0090               	movwf	144	;# 
   782  0109  1283               	bcf	3,5	;# 
   783  010A                     l72:	
   784  010A  0008               	return
   785  010B                     __end_of_config_osc:	
   786                           
   787                           	psect	text5
   788  00D5                     __ptext5:	
   789 ;; *************** function _config_mcu *****************
   790 ;; Defined at:
   791 ;;		line 142 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0
   805 ;;      Params:         0       0
   806 ;;      Locals:         0       0
   807 ;;      Temps:          0       0
   808 ;;      Totals:         0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _config_mcu
   821  00D5                     _config_mcu:	
   822  00D5                     l848:	
   823                           ;incstack = 0
   824                           ; Regs used in _config_mcu: [wreg+status,2]
   825                           
   826                           
   827                           ;main.c: 143:     ANSEL = 0b00000000;
   828  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   829  00D6  019F               	clrf	31	;volatile
   830  00D7                     l850:	
   831                           
   832                           ;main.c: 144:     CMCON = 0b00000111;
   833  00D7  3007               	movlw	7
   834  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   835  00D9  0099               	movwf	25	;volatile
   836  00DA                     l852:	
   837                           
   838                           ;main.c: 145:     TRISIO = 0b11001001;
   839  00DA  30C9               	movlw	201
   840  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   841  00DC  0085               	movwf	5	;volatile
   842                           
   843                           ;main.c: 146:     WPU = 0b00000000;
   844  00DD  0195               	clrf	21	;volatile
   845  00DE                     l854:	
   846                           
   847                           ;main.c: 147:     GP0 = 0;
   848  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   849  00DF  1005               	bcf	5,0	;volatile
   850  00E0                     l856:	
   851                           
   852                           ;main.c: 148:     GP1 = 0;
   853  00E0  1085               	bcf	5,1	;volatile
   854  00E1                     l858:	
   855                           
   856                           ;main.c: 149:     GP2 = 0;
   857  00E1  1105               	bcf	5,2	;volatile
   858  00E2                     l860:	
   859                           
   860                           ;main.c: 150:     GP4 = 0;
   861  00E2  1205               	bcf	5,4	;volatile
   862  00E3                     l862:	
   863                           
   864                           ;main.c: 151:     GP5 = 0;
   865  00E3  1285               	bcf	5,5	;volatile
   866  00E4                     l864:	
   867                           
   868                           ;main.c: 152:     GIE = 1;
   869  00E4  178B               	bsf	11,7	;volatile
   870  00E5                     l866:	
   871                           
   872                           ;main.c: 153:     PEIE= 1;
   873  00E5  170B               	bsf	11,6	;volatile
   874  00E6                     l868:	
   875                           
   876                           ;main.c: 154:     GPIE = 1;
   877  00E6  158B               	bsf	11,3	;volatile
   878  00E7                     l870:	
   879                           
   880                           ;main.c: 155:     IOC0= 1;
   881  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   882  00E8  1416               	bsf	22,0	;volatile
   883  00E9                     l75:	
   884  00E9  0008               	return
   885  00EA                     __end_of_config_mcu:	
   886                           
   887                           	psect	text6
   888  00F8                     __ptext6:	
   889 ;; *************** function _config_TM1 *****************
   890 ;; Defined at:
   891 ;;		line 181 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0
   905 ;;      Params:         0       0
   906 ;;      Locals:         0       0
   907 ;;      Temps:          0       0
   908 ;;      Totals:         0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _config_TM1
   921  00F8                     _config_TM1:	
   922  00F8                     l874:	
   923                           ;incstack = 0
   924                           ; Regs used in _config_TM1: [wreg+status,2]
   925                           
   926                           
   927                           ;main.c: 182:     T1CON = 0b00110000;
   928  00F8  3030               	movlw	48
   929  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   930  00FA  0090               	movwf	16	;volatile
   931  00FB                     l876:	
   932                           
   933                           ;main.c: 183:     TMR1IE = 1;
   934  00FB  1683               	bsf	3,5	;RP0=1, select bank1
   935  00FC  140C               	bsf	12,0	;volatile
   936  00FD                     l878:	
   937                           
   938                           ;main.c: 184:     TMR1L = 0x00;
   939  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   940  00FE  018E               	clrf	14	;volatile
   941  00FF                     l880:	
   942                           
   943                           ;main.c: 185:     TMR1H = 0x00;
   944  00FF  018F               	clrf	15	;volatile
   945  0100                     l81:	
   946  0100  0008               	return
   947  0101                     __end_of_config_TM1:	
   948                           
   949                           	psect	text7
   950  00AC                     __ptext7:	
   951 ;; *************** function _isr *****************
   952 ;; Defined at:
   953 ;;		line 275 in file "main.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		status,2
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0
   967 ;;      Params:         0       0
   968 ;;      Locals:         0       0
   969 ;;      Temps:          0       2
   970 ;;      Totals:         0       2
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		Interrupt level 1
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _isr
   982  00AC                     _isr:	
   983  00AC                     i1l954:	
   984                           
   985                           ;main.c: 281:     if ((GPIE && GPIF) == 1){
   986  00AC  1D8B               	btfss	11,3	;volatile
   987  00AD  28AF               	goto	u25_21
   988  00AE  28B0               	goto	u25_20
   989  00AF                     u25_21:	
   990  00AF  28BD               	goto	i1l107
   991  00B0                     u25_20:	
   992  00B0                     i1l956:	
   993  00B0  1C0B               	btfss	11,0	;volatile
   994  00B1  28B3               	goto	u26_21
   995  00B2  28B4               	goto	u26_20
   996  00B3                     u26_21:	
   997  00B3  28BD               	goto	i1l107
   998  00B4                     u26_20:	
   999  00B4                     i1l958:	
  1000                           
  1001                           ;main.c: 282:         if (GP0 == 1 || GP0 == 0){
  1002  00B4  1805               	btfsc	5,0	;volatile
  1003  00B5  28B7               	goto	u27_21
  1004  00B6  28B8               	goto	u27_20
  1005  00B7                     u27_21:	
  1006  00B7  28BC               	goto	i1l110
  1007  00B8                     u27_20:	
  1008  00B8                     i1l960:	
  1009  00B8  1805               	btfsc	5,0	;volatile
  1010  00B9  28BB               	goto	u28_21
  1011  00BA  28BC               	goto	u28_20
  1012  00BB                     u28_21:	
  1013  00BB  28BD               	goto	i1l107
  1014  00BC                     u28_20:	
  1015  00BC                     i1l110:	
  1016                           
  1017                           ;main.c: 283:         GPIF = 0;
  1018  00BC  100B               	bcf	11,0	;volatile
  1019  00BD                     i1l107:	
  1020                           ;main.c: 285:     }
  1021                           
  1022                           
  1023                           ;main.c: 292:     if(TMR1IE == 1 && TMR1IF== 1)
  1024  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1025  00BE  1C0C               	btfss	12,0	;volatile
  1026  00BF  28C1               	goto	u29_21
  1027  00C0  28C2               	goto	u29_20
  1028  00C1                     u29_21:	
  1029  00C1  28CD               	goto	i1l112
  1030  00C2                     u29_20:	
  1031  00C2                     i1l962:	
  1032  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1033  00C3  1C0C               	btfss	12,0	;volatile
  1034  00C4  28C6               	goto	u30_21
  1035  00C5  28C7               	goto	u30_20
  1036  00C6                     u30_21:	
  1037  00C6  28CD               	goto	i1l112
  1038  00C7                     u30_20:	
  1039  00C7                     i1l964:	
  1040                           
  1041                           ;main.c: 293:     {;main.c: 294:         timer_out = 1;
  1042  00C7  01AA               	clrf	_timer_out
  1043  00C8  0AAA               	incf	_timer_out,f
  1044                           
  1045                           ;main.c: 295:         TMR1IF = 0;
  1046  00C9  100C               	bcf	12,0	;volatile
  1047                           
  1048                           ;main.c: 296:         TMR1ON = 0;
  1049  00CA  1010               	bcf	16,0	;volatile
  1050  00CB                     i1l966:	
  1051                           
  1052                           ;main.c: 297:         TMR1L = 0x00;
  1053  00CB  018E               	clrf	14	;volatile
  1054                           
  1055                           ;main.c: 298:         TMR1H = 0x00;
  1056  00CC  018F               	clrf	15	;volatile
  1057  00CD                     i1l112:	
  1058  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1059  00CE  0821               	movf	??_isr+1,w
  1060  00CF  008A               	movwf	10
  1061  00D0  0E20               	swapf	??_isr^0,w
  1062  00D1  0083               	movwf	3
  1063  00D2  0EDE               	swapf	btemp,f
  1064  00D3  0E5E               	swapf	btemp,w
  1065  00D4  0009               	retfie
  1066  00D5                     __end_of_isr:	
  1067  005E                     btemp	set	94	;btemp
  1068  005E                     wtemp0	set	94
  1069                           
  1070                           	psect	intentry
  1071  0004                     __pintentry:	
  1072                           ;incstack = 0
  1073                           ; Regs used in _isr: [status,2]
  1074                           
  1075  0004                     interrupt_function:	
  1076  005E                     saved_w	set	btemp
  1077  0004  00DE               	movwf	btemp
  1078  0005  0E03               	swapf	3,w
  1079  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0007  00A0               	movwf	??_isr
  1081  0008  080A               	movf	10,w
  1082  0009  00A1               	movwf	??_isr+1
  1083  000A  28AC               	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      9      12

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_timer_on

Critical Paths under _isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      71
                         _config_TM1
                         _config_mcu
                         _config_osc
                         _config_var
                        _read_button
                           _timer_on
 ---------------------------------------------------------------------------------
 (1) _timer_on                                             7     7      0      71
                                              2 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _read_button                                          2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_var                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_osc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_mcu                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_TM1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_TM1
   _config_mcu
   _config_osc
   _config_var
   _read_button
   _timer_on

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      9       C       4       19.4%
ABS                  0      0       C       5        0.0%
DATA                 0      0       C       6        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb  8 01:16:32 2020

            __CFG_CP$OFF 0000                       l72 010A                       l81 0100  
                     l90 0063                       l75 00E9                       l78 0105  
                     l94 00AB                       l86 0052                       l96 0078  
                     l89 005F                      l102 00AB                      l900 008F  
                    l902 0095                      l920 0025                      l912 0012  
                    l850 00D7                      l906 0098                      l930 003D  
                    l922 002B                      l914 001B                      l860 00E2  
                    l852 00DA                      l940 0062                      l932 0043  
                    l924 002C                      l916 001C                      l870 00E7  
                    l862 00E3                      l854 00DE                      l846 0106  
                    l934 0044                      l926 002D                      l918 001F  
                    l950 00EF                      l942 00EA                      l880 00FF  
                    l864 00E4                      l856 00E0                      l848 00D5  
                    l872 0101                      l928 0033                      l952 00F5  
                    l944 00EB                      l874 00F8                      l866 00E5  
                    l858 00E1                      l890 007B                      l882 0064  
                    l938 0052                      l946 00EC                      l876 00FB  
                    l868 00E6                      l892 007F                      l884 0069  
                    l948 00EE                      _GP0 0028                      _GP1 0029  
                    l878 00FD                      l894 0085                      l886 0072  
                    _GP2 002A                      l896 0089                      _GP4 002C  
                    _GP5 002D                      l898 008B                      _GIE 005F  
                    l988 00A0                      u200 0025                      u201 0024  
                    u210 0033                      u211 0032                      u220 0043  
                    u221 0042                      u230 005F                      u231 005E  
                    u160 0069                      u240 00F5                      u161 0068  
                    u241 00F4                      u170 0077                      u171 0076  
                    u235 005B                      u180 0085                      u181 0084  
                    u317 004A                      u190 0095                      u191 0094  
                    u327 006D             __CFG_CPD$OFF 0000                      _WPU 0095  
                    _isr 00AC                     ?_isr 0020                     _IOC0 04B0  
                   _GPIE 005B                     _GPIF 0058                     _PEIE 005E  
                   _main 00EA                     _modo 002B                     btemp 005E  
          __CFG_BOREN$ON 0000                     start 000B                    ??_isr 0020  
                  OSCCAL 0090                    STATUS 0003                    ?_main 0020  
          __CFG_WDTE$OFF 0000                    _CMCON 0019                    _ANSEL 009F  
                  _T1CON 0010                    i1l110 00BC                    i1l112 00CD  
                  i1l107 00BD                    i1l960 00B8                    i1l962 00C2  
                  i1l954 00AC                    i1l964 00C7                    i1l956 00B0  
                  i1l966 00CB                    i1l958 00B4                    u30_20 00C7  
                  u30_21 00C6                    u25_20 00B0                    u25_21 00AF  
                  _TMR1H 000F                    _TMR1L 000E                    u26_20 00B4  
                  u26_21 00B3                    u27_20 00B8                    u27_21 00B7  
                  u28_20 00BC                    u28_21 00BB                    u29_20 00C2  
                  u29_21 00C1             ?_read_button 0020                    pclath 000A  
                  status 0003                    wtemp0 005E           __CFG_MCLRE$OFF 0000  
        __initialization 000C             __end_of_main 00F8                   ??_main 0000  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1ON 0080  
                 _TRISIO 0085           __CFG_PWRTE$OFF 0000                   saved_w 005E  
       __end_of_timer_on 0064  __end_of__initialization 0010           __pcstackCOMMON 0000  
   __size_of_read_button 0048               __pbssBANK0 0029               __pmaintext 00EA  
             __pintentry 0004               _config_TM1 00F8               _config_mcu 00D5  
             _config_osc 0106               _config_var 0101                ?_timer_on 0020  
                __ptext1 0012                  __ptext2 0064                  __ptext3 0101  
                __ptext4 0106                  __ptext5 00D5                  __ptext6 00F8  
                __ptext7 00AC             __size_of_isr 0029     end_of_initialization 0010  
             ??_timer_on 0022              ?_config_TM1 0020              ?_config_mcu 0020  
            ?_config_osc 0020              ?_config_var 0020      start_initialization 000C  
            __end_of_isr 00D5      __size_of_config_TM1 0009      __size_of_config_mcu 0015  
    __size_of_config_osc 0005      __size_of_config_var 0005                ___latbits 0000  
          __pcstackBANK0 0020            ??_read_button 0022        __size_of_timer_on 0052  
      interrupt_function 0004      __end_of_read_button 00AC                _timer_out 002A  
           ??_config_TM1 0000             ??_config_mcu 0000             ??_config_osc 0000  
           ??_config_var 0000       __end_of_config_TM1 0101       __end_of_config_mcu 00EA  
     __end_of_config_osc 010B       __end_of_config_var 0106   timer_on@timer_cont_min 0027  
 timer_on@timer_cont_seg 0025              _read_button 0064            __size_of_main 000E  
               _timer_on 0012                 intlevel1 0000       _count_button_press 0029  
      __CFG_FOSC$INTRCIO 0000  
